<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Blog by Ekta</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Blog by Ekta</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Dec 2020 16:08:56 +0530</lastBuildDate>
    
	<atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How web applications work?</title>
      <link>/posts/webapps/</link>
      <pubDate>Wed, 30 Dec 2020 16:08:56 +0530</pubDate>
      
      <guid>/posts/webapps/</guid>
      <description>You must be thinking that such a basic question doesn&amp;rsquo;t need an entire article. But as you will read, you&amp;rsquo;ll understand why this basic question do deserve an article.
Well, I asked this same question written above to a room full of programmers/developers. I could see the look of total contempt and amazement for asking such a basic question. But as I started getting answers from assembled technologies, I realised that the core understanding of how web apps work isn&amp;rsquo;t that simple.</description>
    </item>
    
    <item>
      <title>Golang: A Todo App using GIN</title>
      <link>/posts/todo-app-using-gin/</link>
      <pubDate>Wed, 30 Dec 2020 02:01:58 +0530</pubDate>
      
      <guid>/posts/todo-app-using-gin/</guid>
      <description>Gin is a high-performance micro-framework that can be used to build web applications. It allows you to write middleware that can be plugged into one or more request handlers or groups of request handlers.
It is the most popular framework in Golang. Look at the picture above, this framework has the highest no. of stars on Github.com
Goals By the end of this tutorial, you will:
 Learn how to use Gin to create RESTful APIs (we will be creating a TODO application), and Understand the parts of a web application written in Go.</description>
    </item>
    
  </channel>
</rss>